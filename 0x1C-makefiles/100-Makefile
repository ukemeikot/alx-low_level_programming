# compiler
CC = gcc

# source files
SRC = main.c school.c

# object files extracted from the specfied source files
OBJ = $(SRC:.c=.o)

# name of the excutable
NAME = school

# most macros are already define by default by make like, RM, generating object files and CFLAG. and others
# program to delete files
# RM = rm -f

# compilation flags
CFLAGS = -Wall -Werror -Wextra -pedantic
# rules for all target
all: $(NAME)

ifeq ($(wildcard m.h), m.h)

# rules for generating executable by linking all object files
$(NAME): $(OBJ)
	$(CC) $^ -o $@

# rules for cleaning - clean
clean:
	$(RM) *~ $(NAME)

# rules for removing object files
oclean:
	$(RM) $(OBJ)

# rules for deleting emacs temp. vim temp. and object and executables
fclean: clean oclean

# rules for recompiling
re: oclean all

.PHONY: all clean oclean fclean re

else
$(error m.h does not exist)
endif
